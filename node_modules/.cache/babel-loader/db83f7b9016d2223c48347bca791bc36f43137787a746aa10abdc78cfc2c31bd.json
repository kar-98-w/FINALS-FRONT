{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karl\\\\Documents\\\\3rd year (1st sem)\\\\FINALS\\\\SYSTEM-CLIENT-main\\\\src\\\\pages\\\\UpdatePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePassword = () => {\n  _s();\n  // State to hold form data and response messages\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (newPassword !== confirmPassword) {\n      setError(\"New passwords do not match.\");\n      return;\n    }\n    if (newPassword.length < 6) {\n      setError(\"New password must be at least 6 characters.\");\n      return;\n    }\n\n    // Sending the POST request using fetch without async/await\n    fetch(\"http://localhost:4000/update-password\", {\n      // Replace with your backend URL\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Send JSON data\n        \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}` // Authorization header with token\n      },\n      body: JSON.stringify({\n        currentPassword,\n        // The current password entered by the user\n        newPassword // The new password entered by the user\n      })\n    }).then(response => {\n      // Check if response is successful\n      if (!response.ok) {\n        return response.json().then(result => {\n          // If response is not okay, show error message\n          setMessage(\"\"); // Clear any success messages\n          setError(result.message || \"An error occurred\");\n          throw new Error(result.message || \"An error occurred\");\n        });\n      }\n      return response.json(); // Return the response body as JSON\n    }).then(result => {\n      // If successful, show success message\n      setMessage(result.message);\n      setError(\"\"); // Clear any previous error\n    }).catch(err => {\n      // Catch any errors in the fetch process\n      setMessage(\"\"); // Clear any success messages\n      setError(err.message || \"An error occurred while updating the password\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePassword, \"+XVIKiS6suUTJOt9pgYgvRWhJQ4=\");\n_c = UpdatePassword;\nexport default UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","Container","jsxDEV","_jsxDEV","UpdatePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","handleSubmit","e","preventDefault","length","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","response","ok","json","result","Error","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Karl/Documents/3rd year (1st sem)/FINALS/SYSTEM-CLIENT-main/src/pages/UpdatePassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\r\n\r\nconst UpdatePassword = () => {\r\n  // State to hold form data and response messages\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic validation\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"New passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      setError(\"New password must be at least 6 characters.\");\r\n      return;\r\n    }\r\n\r\n    // Sending the POST request using fetch without async/await\r\n    fetch(\"http://localhost:4000/update-password\", {  // Replace with your backend URL\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\", // Send JSON data\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`, // Authorization header with token\r\n      },\r\n      body: JSON.stringify({\r\n        currentPassword,  // The current password entered by the user\r\n        newPassword,      // The new password entered by the user\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        // Check if response is successful\r\n        if (!response.ok) {\r\n          return response.json().then((result) => {\r\n            // If response is not okay, show error message\r\n            setMessage(\"\");  // Clear any success messages\r\n            setError(result.message || \"An error occurred\");\r\n            throw new Error(result.message || \"An error occurred\");\r\n          });\r\n        }\r\n        return response.json(); // Return the response body as JSON\r\n      })\r\n      .then((result) => {\r\n        // If successful, show success message\r\n        setMessage(result.message);\r\n        setError(\"\");  // Clear any previous error\r\n      })\r\n      .catch((err) => {\r\n        // Catch any errors in the fetch process\r\n        setMessage(\"\");  // Clear any success messages\r\n        setError(err.message || \"An error occurred while updating the password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Update Password</h2>\r\n\r\n      {/* Show success/error messages */}\r\n      {message && <Alert variant=\"success\">{message}</Alert>}\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Current Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Confirm New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update Password\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdatePassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}