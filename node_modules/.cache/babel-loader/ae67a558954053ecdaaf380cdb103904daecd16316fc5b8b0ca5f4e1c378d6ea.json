{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karl\\\\Documents\\\\3rd year (1st sem)\\\\FINALS\\\\SYSTEM-CLIENT-main\\\\src\\\\pages\\\\UpdatePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePassword = () => {\n  _s();\n  // State to hold form data and response messages\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (newPassword !== confirmPassword) {\n      setError(\"New passwords do not match.\");\n      return;\n    }\n    if (newPassword.length < 6) {\n      setError(\"New password must be at least 6 characters.\");\n      return;\n    }\n    try {\n      // Send a POST request to the backend API to update the password\n      const response = await axios.post(\"http://localhost:4000/update-password\",\n      // Your backend URL\n      {\n        currentPassword,\n        newPassword\n      }, {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}` // Assuming token is stored in localStorage\n        }\n      });\n\n      // If success, show success message\n      setMessage(response.data.message);\n      setError(\"\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      // If error, show error message\n      setMessage(\"\");\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: currentPassword,\n          onChange: e => setCurrentPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePassword, \"+XVIKiS6suUTJOt9pgYgvRWhJQ4=\");\n_c = UpdatePassword;\nexport default UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","useState","axios","Form","Button","Alert","Container","jsxDEV","_jsxDEV","UpdatePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","handleSubmit","e","preventDefault","length","response","post","headers","localStorage","getItem","data","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Karl/Documents/3rd year (1st sem)/FINALS/SYSTEM-CLIENT-main/src/pages/UpdatePassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\r\n\r\nconst UpdatePassword = () => {\r\n    // State to hold form data and response messages\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Basic validation\r\n        if (newPassword !== confirmPassword) {\r\n            setError(\"New passwords do not match.\");\r\n            return;\r\n        }\r\n\r\n        if (newPassword.length < 6) {\r\n            setError(\"New password must be at least 6 characters.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Send a POST request to the backend API to update the password\r\n            const response = await axios.post(\r\n                \"http://localhost:4000/update-password\", // Your backend URL\r\n                {\r\n                    currentPassword,\r\n                    newPassword\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}` // Assuming token is stored in localStorage\r\n                    }\r\n                }\r\n            );\r\n\r\n            // If success, show success message\r\n            setMessage(response.data.message);\r\n            setError(\"\");\r\n        } catch (err) {\r\n            // If error, show error message\r\n            setMessage(\"\");\r\n            setError(err.response?.data?.message || \"An error occurred\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <h2>Update Password</h2>\r\n\r\n            {/* Show success/error messages */}\r\n            {message && <Alert variant=\"success\">{message}</Alert>}\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Current Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={currentPassword}\r\n                        onChange={(e) => setCurrentPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Confirm New Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Update Password\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UpdatePassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMoB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIV,WAAW,KAAKE,eAAe,EAAE;MACjCK,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACJ;IAEA,IAAIP,WAAW,CAACW,MAAM,GAAG,CAAC,EAAE;MACxBJ,QAAQ,CAAC,6CAA6C,CAAC;MACvD;IACJ;IAEA,IAAI;MACA;MACA,MAAMK,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAC7B,uCAAuC;MAAE;MACzC;QACIf,eAAe;QACfE;MACJ,CAAC,EACD;QACIc,OAAO,EAAE;UACL,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;QACnE;MACJ,CACJ,CAAC;;MAED;MACAX,UAAU,CAACO,QAAQ,CAACK,IAAI,CAACb,OAAO,CAAC;MACjCG,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOW,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACV;MACAf,UAAU,CAAC,EAAE,CAAC;MACdE,QAAQ,CAAC,EAAAY,aAAA,GAAAD,GAAG,CAACN,QAAQ,cAAAO,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBhB,OAAO,KAAI,mBAAmB,CAAC;IAChE;EACJ,CAAC;EAED,oBACIT,OAAA,CAACF,SAAS;IAAC4B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACvB3B,OAAA;MAAA2B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGvBtB,OAAO,iBAAIT,OAAA,CAACH,KAAK;MAACmC,OAAO,EAAC,SAAS;MAAAL,QAAA,EAAElB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACrDpB,KAAK,iBAAIX,OAAA,CAACH,KAAK;MAACmC,OAAO,EAAC,QAAQ;MAAAL,QAAA,EAAEhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEjD/B,OAAA,CAACL,IAAI;MAACsC,QAAQ,EAAEpB,YAAa;MAAAc,QAAA,gBACzB3B,OAAA,CAACL,IAAI,CAACuC,KAAK;QAACR,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACxB3B,OAAA,CAACL,IAAI,CAACwC,KAAK;UAAAR,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACzC/B,OAAA,CAACL,IAAI,CAACyC,OAAO;UACTC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEnC,eAAgB;UACvBoC,QAAQ,EAAGzB,CAAC,IAAKV,kBAAkB,CAACU,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAEb/B,OAAA,CAACL,IAAI,CAACuC,KAAK;QAACR,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACxB3B,OAAA,CAACL,IAAI,CAACwC,KAAK;UAAAR,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACrC/B,OAAA,CAACL,IAAI,CAACyC,OAAO;UACTC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEjC,WAAY;UACnBkC,QAAQ,EAAGzB,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UAChDG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAEb/B,OAAA,CAACL,IAAI,CAACuC,KAAK;QAACR,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACxB3B,OAAA,CAACL,IAAI,CAACwC,KAAK;UAAAR,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC7C/B,OAAA,CAACL,IAAI,CAACyC,OAAO;UACTC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE/B,eAAgB;UACvBgC,QAAQ,EAAGzB,CAAC,IAAKN,kBAAkB,CAACM,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;UACpDG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAEb/B,OAAA,CAACJ,MAAM;QAACoC,OAAO,EAAC,SAAS;QAACK,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEpB,CAAC;AAAC7B,EAAA,CA7FID,cAAc;AAAAyC,EAAA,GAAdzC,cAAc;AA+FpB,eAAeA,cAAc;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}