{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karl\\\\Documents\\\\3rd year (1st sem)\\\\FINALS\\\\SYSTEM-CLIENT-main\\\\src\\\\pages\\\\UpdatePassword.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePassword() {\n  _s();\n  // State to hold form data and response messages\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  function UpdatePassword(e) {\n    e.preventDefault();\n\n    // Basic validation\n    if (newPassword !== confirmPassword) {\n      setError(\"New passwords do not match.\");\n      return;\n    }\n    if (newPassword.length < 6) {\n      setError(\"New password must be at least 6 characters.\");\n      return;\n    }\n    fetch(\"http://localhost:4000/users/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // We are sending JSON data\n        \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}` // Send JWT token from localStorage\n      },\n      body: JSON.stringify({\n        currentPassword,\n        // The current password entered by the user\n        newPassword // The new password entered by the user\n      })\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"profile-page mt-5 col-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Update Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"oldPassword\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Old Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter your old password\",\n          value: oldPassword,\n          onChange: e => setOldPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"newPassword\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"confirmPassword\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 30\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"w-100 mt-3\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this) : 'Update Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n}\n_s(UpdatePassword, \"+XVIKiS6suUTJOt9pgYgvRWhJQ4=\");\n_c = UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["useState","useContext","Container","Form","jsxDEV","_jsxDEV","UpdatePassword","_s","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","e","preventDefault","length","fetch","method","headers","localStorage","getItem","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","Group","controlId","Label","Control","type","placeholder","value","oldPassword","onChange","setOldPassword","target","required","errorMessage","Alert","variant","successMessage","Button","disabled","isLoading","Spinner","animation","size","_c","$RefreshReg$"],"sources":["C:/Users/Karl/Documents/3rd year (1st sem)/FINALS/SYSTEM-CLIENT-main/src/pages/UpdatePassword.js"],"sourcesContent":["import { useState, useContext } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\n\r\n\r\nexport default function UpdatePassword(){\r\n\r\n        // State to hold form data and response messages\r\n        const [currentPassword, setCurrentPassword] = useState(\"\");\r\n        const [newPassword, setNewPassword] = useState(\"\");\r\n        const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n        const [message, setMessage] = useState(\"\");\r\n        const [error, setError] = useState(\"\");\r\n\r\n        function UpdatePassword (e){\r\n            e.preventDefault();\r\n\r\n            // Basic validation\r\n    if (newPassword !== confirmPassword) {\r\n        setError(\"New passwords do not match.\");\r\n        return;\r\n      }\r\n  \r\n      if (newPassword.length < 6) {\r\n        setError(\"New password must be at least 6 characters.\");\r\n        return;\r\n      }\r\n\r\n            fetch(\"http://localhost:4000/users/register\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",  // We are sending JSON data\r\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`, // Send JWT token from localStorage\r\n                },\r\n                body: JSON.stringify({\r\n                    currentPassword,  // The current password entered by the user\r\n                    newPassword,      // The new password entered by the user\r\n                  }),\r\n                });\r\n\r\n        }\r\n\r\n        return (\r\n            <Container className=\"profile-page mt-5 col-6\">\r\n          <h1 className=\"text-center\">Update Your Password</h1>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"oldPassword\" className='mb-3'>\r\n              <Form.Label>Old Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter your old password\"\r\n                value={oldPassword}\r\n                onChange={(e) => setOldPassword(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n    \r\n            <Form.Group controlId=\"newPassword\" className='mb-3'>\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter new password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n    \r\n            <Form.Group controlId=\"confirmPassword\" className='mb-3'>\r\n              <Form.Label>Confirm New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm new password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n    \r\n            {errorMessage && <Alert variant=\"danger\">{errorMessage}</Alert>}\r\n            {successMessage && <Alert variant=\"success\">{successMessage}</Alert>}\r\n    \r\n            <Button variant=\"primary\" type=\"submit\" disabled={isLoading} className=\"w-100 mt-3\">\r\n              {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : 'Update Password'}\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n        );\r\n    }\r\n    \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}