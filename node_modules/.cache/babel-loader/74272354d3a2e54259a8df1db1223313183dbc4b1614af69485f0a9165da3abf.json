{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karl\\\\Documents\\\\3rd year (1st sem)\\\\FINALS\\\\SYSTEM-CLIENT-main\\\\src\\\\pages\\\\UpdatePassword.js\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePassword() {\n  var _s = $RefreshSig$();\n  const UpdatePassword = () => {\n    _s();\n    // State to hold form data and response messages\n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    // Handle form submission\n    const handleSubmit = e => {\n      e.preventDefault();\n\n      // Basic validation\n      if (newPassword !== confirmPassword) {\n        setError(\"New passwords do not match.\");\n        return;\n      }\n      if (newPassword.length < 6) {\n        setError(\"New password must be at least 6 characters.\");\n        return;\n      }\n\n      // Sending the POST request using fetch without async/await\n      fetch(\"http://localhost:4000/users/update-password\", {\n        // Replace with your backend URL\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // Send JSON data\n          \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}` // Authorization header with token\n        },\n        body: JSON.stringify({\n          currentPassword,\n          // The current password entered by the user\n          newPassword // The new password entered by the user\n        })\n      }).then(response => {\n        // Check if response is successful\n        if (!response.ok) {\n          return response.json().then(result => {\n            // If response is not okay, show error message\n            setMessage(\"\"); // Clear any success messages\n            setError(result.message || \"An error occurred\");\n            throw new Error(result.message || \"An error occurred\");\n          });\n        }\n        return response.json(); // Return the response body as JSON\n      }).then(result => {\n        // If successful, show success message\n        setMessage(result.message);\n        setError(\"\"); // Clear any previous error\n      }).catch(err => {\n        // Catch any errors in the fetch process\n        setMessage(\"\"); // Clear any success messages\n        setError(err.message || \"An error occurred while updating the password\");\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Current Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: currentPassword,\n            onChange: e => setCurrentPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this);\n  };\n  _s(UpdatePassword, \"+XVIKiS6suUTJOt9pgYgvRWhJQ4=\");\n}\n_c = UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","Container","jsxDEV","_jsxDEV","UpdatePassword","_s","$RefreshSig$","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","handleSubmit","e","preventDefault","length","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","response","ok","json","result","Error","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Karl/Documents/3rd year (1st sem)/FINALS/SYSTEM-CLIENT-main/src/pages/UpdatePassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button, Alert, Container } from \"react-bootstrap\";\r\n\r\nexport default function UpdatePassword(){\r\n\r\nconst UpdatePassword = () => {\r\n  // State to hold form data and response messages\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic validation\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"New passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      setError(\"New password must be at least 6 characters.\");\r\n      return;\r\n    }\r\n\r\n    // Sending the POST request using fetch without async/await\r\n    fetch(\"http://localhost:4000/users/update-password\", {  // Replace with your backend URL\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\", // Send JSON data\r\n        \"Authorization\": `Bearer ${localStorage.getItem(\"authToken\")}`, // Authorization header with token\r\n      },\r\n      body: JSON.stringify({\r\n        currentPassword,  // The current password entered by the user\r\n        newPassword,      // The new password entered by the user\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        // Check if response is successful\r\n        if (!response.ok) {\r\n          return response.json().then((result) => {\r\n            // If response is not okay, show error message\r\n            setMessage(\"\");  // Clear any success messages\r\n            setError(result.message || \"An error occurred\");\r\n            throw new Error(result.message || \"An error occurred\");\r\n          });\r\n        }\r\n        return response.json(); // Return the response body as JSON\r\n      })\r\n      .then((result) => {\r\n        // If successful, show success message\r\n        setMessage(result.message);\r\n        setError(\"\");  // Clear any previous error\r\n      })\r\n      .catch((err) => {\r\n        // Catch any errors in the fetch process\r\n        setMessage(\"\");  // Clear any success messages\r\n        setError(err.message || \"An error occurred while updating the password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Update Password</h2>\r\n\r\n      {/* Show success/error messages */}\r\n      {message && <Alert variant=\"success\">{message}</Alert>}\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Current Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={currentPassword}\r\n            onChange={(e) => setCurrentPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Confirm New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update Password\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}